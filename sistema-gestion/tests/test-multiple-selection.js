/**
 * Test script para verificar la funcionalidad de selecci√≥n m√∫ltiple
 * Uso: node tests/test-multiple-selection.js
 */

const { PrismaClient } = require("@prisma/client");
const prisma = new PrismaClient();

async function testMultipleSelection() {
  try {
    console.log("üß™ Iniciando prueba de selecci√≥n m√∫ltiple...");

    // 1. Buscar algunos productos para simular la selecci√≥n
    const products = await prisma.product.findMany({
      take: 5,
      include: {
        category: true,
        supplier: true,
      },
      where: {
        imageUrl: {
          not: null,
        },
      },
    });

    console.log(`üì¶ Productos encontrados con imagen: ${products.length}`);

    products.forEach((product, index) => {
      console.log(
        `  ${index + 1}. ${product.name} (${product.sku || "Sin SKU"})`
      );
      console.log(`     - Costo: $${product.cost}`);
      console.log(`     - Stock: ${product.stock} ${product.unit}`);
      console.log(`     - Imagen: ${product.imageUrl ? "‚úÖ S√≠" : "‚ùå No"}`);
      console.log(`     - Categor√≠a: ${product.category.name}`);
      console.log("");
    });

    console.log("‚úÖ Funcionalidad implementada:");
    console.log("   üì∏ Im√°genes m√°s grandes (w-16 h-16 vs w-12 h-12)");
    console.log("   ‚òëÔ∏è  Selecci√≥n m√∫ltiple con checkboxes");
    console.log('   üéØ Bot√≥n "Agregar X productos" din√°mico');
    console.log('   üßπ Bot√≥n "Limpiar selecci√≥n"');
    console.log('   ‚ö° Bot√≥n "Agregar individual" para casos r√°pidos');
    console.log("   üö´ Productos ya agregados deshabilitados");
    console.log(
      "   üé® Estados visuales claros (seleccionado, agregado, normal)"
    );

    console.log("\nüìã Para probar:");
    console.log("   1. Ir a /purchases/new");
    console.log('   2. Hacer clic en "Agregar Producto"');
    console.log("   3. Seleccionar m√∫ltiples productos con los checkboxes");
    console.log('   4. Hacer clic en "Agregar X productos"');
    console.log("   5. Verificar que las im√°genes se ven m√°s grandes");
  } catch (error) {
    console.error("‚ùå Error en la prueba:", error);
  } finally {
    await prisma.$disconnect();
  }
}

testMultipleSelection();
